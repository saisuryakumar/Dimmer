C51 COMPILER V9.57.0.0   CODE                                                              02/26/2018 13:46:34 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN code.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          
   3          sbit Out = P2^0;
   4          sbit In = P1^0;
   5          
   6          
   7          sbit Led1 = P2^1;
   8          sbit Led2 = P2^2;
   9          sbit Led3 = P2^3;
  10          sbit Led4 = P2^4;
  11          sbit Led5 = P2^5;
  12          
  13          void cct_init(void);
  14          void delay_usec(unsigned int);
  15          void InitINT(void);
  16          
  17          unsigned char TimeUp = 0;
  18          int Step =0;
  19          
  20          // Main function
  21          int main(void)
  22          {
  23   1        
  24   1        cct_init();
  25   1        InitINT();
  26   1        
  27   1        while(1)                
  28   1         {         
  29   2           
  30   2           if(In == 1 && Step >0)
  31   2           {
  32   3             Out = 0xFF;
  33   3             delay_usec(1900*Step);
  34   3             
  35   3           }
  36   2           else 
  37   2             Out = 0x00;
  38   2           
  39   2           switch(Step)
  40   2           {
  41   3             case 0:
  42   3                Led1 = 0x00;
  43   3                Led2 = 0x00;
  44   3                Led3 = 0x00;
  45   3                Led4 = 0x00;
  46   3                Led5 = 0x00;
  47   3             break;
  48   3             
  49   3             case 1:
  50   3                Led1 = 0xFF;
  51   3                Led2 = 0x00;
  52   3                Led3 = 0x00;
  53   3                Led4 = 0x00;
  54   3                Led5 = 0x00;
  55   3             break;
C51 COMPILER V9.57.0.0   CODE                                                              02/26/2018 13:46:34 PAGE 2   

  56   3             
  57   3             case 2:
  58   3                Led1 = 0xFF;
  59   3                Led2 = 0xFF;
  60   3                Led3 = 0x00;
  61   3                Led4 = 0x00;
  62   3                Led5 = 0x00;
  63   3             break;
  64   3             
  65   3             case 3:
  66   3                Led1 = 0xFF;
  67   3                Led2 = 0xFF;
  68   3                Led3 = 0xFF;
  69   3                Led4 = 0x00;
  70   3                Led5 = 0x00;
  71   3             break;
  72   3             
  73   3             case 4:
  74   3                Led1 = 0xFF;
  75   3                Led2 = 0xFF;
  76   3                Led3 = 0xFF;
  77   3                Led4 = 0xFF;
  78   3                Led5 = 0x00;
  79   3             break;
  80   3             
  81   3             case 5:
  82   3                Led1 = 0xFF;
  83   3                Led2 = 0xFF;
  84   3                Led3 = 0xFF;
  85   3                Led4 = 0xFF;
  86   3                Led5 = 0xFF;
  87   3             break;
  88   3           }
  89   2               
  90   2         }
  91   1      }
  92          
  93          // Circuit Initialize function
  94          void cct_init(void)
  95          {
  96   1        P0 = 0xFF;   
  97   1        P1 = 0xFF;   
  98   1        P2 = 0x00;   
  99   1        P3 = 0xFF;  
 100   1      }
 101          
 102          // Delay function, it generates delay in micro seconds
 103          void delay_usec(unsigned int d)   // d can have a value from 0 to 65535 only.
 104          {
 105   1        TMOD &= 0xF0;    // Clear 4bit field for timer0
 106   1        TMOD |= 0x01;    // Set timer0 in mode 1 = 16bit mode
 107   1        
 108   1        TH0  = 0xFF - (d>>8)&0xFF;  // Load timer0 registers with 
 109   1        TL0  = 0xFF - d&0xFF;   // delay value                 
 110   1        
 111   1        ET0 = 1;         // Enable Timer0 interrupts
 112   1        EA  = 1;         // Global interrupt enable
 113   1        
 114   1        TimeUp = 0;      // When timer expires then this variable will become 1
 115   1      
 116   1        TR0 = 1;         // Start Timer 0
 117   1      
C51 COMPILER V9.57.0.0   CODE                                                              02/26/2018 13:46:34 PAGE 3   

 118   1        while(!TimeUp);  // Wait for timeup
 119   1      
 120   1        TR0 = 0;         // Done
 121   1      }
 122          
 123          // Timer0 ISR function
 124          void Timer0_ISR (void) interrupt 1   // It is called after every 250usec
 125          {
 126   1        TimeUp = 1;  // Make TimeUp variable 1 to indicate timer0 overflow
 127   1        TF0 = 0;     // Clear the interrupt flag
 128   1      }
 129          
 130          
 131          // External INT0 pin interrupt init function
 132          void InitINT(void)
 133          {
 134   1        IT0 = 1;      //Edge triggered interrupt mode (Neg Edge)
 135   1        IT1 = 1;
 136   1        EX0 = 1;    //Enable external interrupt INT0
 137   1        EX1 = 1;
 138   1        EA  = 1;      //Enable global interrupts
 139   1      }
 140          
 141          
 142          // INT0 ISR
 143          void Inc_isr(void) interrupt 0     
 144          {
 145   1        Step = Step + 1;
 146   1        if(Step >=5)
 147   1          Step = 5;
 148   1      } 
 149          void Dec_isr(void) interrupt 2    
 150          {
 151   1        Step = Step - 1;
 152   1        if(Step <=0)
 153   1          Step = 0; 
 154   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    259    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
